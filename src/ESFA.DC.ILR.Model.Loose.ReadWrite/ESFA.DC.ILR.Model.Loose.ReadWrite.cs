//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// This code was generated by XmlSchemaClassGenerator version 2.0.373.0.
namespace ESFA.DC.ILR.Model.Loose.ReadWrite
{
    using System.Collections;
    using System.Collections.Generic;
    using System.Collections.ObjectModel;
    using System.Xml.Serialization;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.373.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("Message", Namespace="ESFA/ILR/2020-21", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlRootAttribute("Message", Namespace="ESFA/ILR/2020-21")]
    public partial class Message
    {
        
        [System.Xml.Serialization.XmlElementAttribute("Header")]
        public MessageHeader Header { get; set; }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<MessageSourceFilesSourceFile> _sourceFiles;
        
        [System.Xml.Serialization.XmlArrayAttribute("SourceFiles")]
        [System.Xml.Serialization.XmlArrayItemAttribute("SourceFile")]
        public System.Collections.Generic.List<MessageSourceFilesSourceFile> SourceFiles
        {
            get
            {
                return this._sourceFiles;
            }
            private set
            {
                this._sourceFiles = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die SourceFiles-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the SourceFiles collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool SourceFilesSpecified
        {
            get
            {
                return (this.SourceFiles.Count != 0);
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Initialisiert eine neue Instanz der <see cref="Message" /> Klasse.</para>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="Message" /> class.</para>
        /// </summary>
        public Message()
        {
            this._sourceFiles = new System.Collections.Generic.List<MessageSourceFilesSourceFile>();
            this._learner = new System.Collections.Generic.List<MessageLearner>();
            this._learnerDestinationandProgression = new System.Collections.Generic.List<MessageLearnerDestinationandProgression>();
        }
        
        [System.Xml.Serialization.XmlElementAttribute("LearningProvider")]
        public MessageLearningProvider LearningProvider { get; set; }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<MessageLearner> _learner;
        
        [System.Xml.Serialization.XmlElementAttribute("Learner")]
        public System.Collections.Generic.List<MessageLearner> Learner
        {
            get
            {
                return this._learner;
            }
            private set
            {
                this._learner = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Learner-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the Learner collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool LearnerSpecified
        {
            get
            {
                return (this.Learner.Count != 0);
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<MessageLearnerDestinationandProgression> _learnerDestinationandProgression;
        
        [System.Xml.Serialization.XmlElementAttribute("LearnerDestinationandProgression")]
        public System.Collections.Generic.List<MessageLearnerDestinationandProgression> LearnerDestinationandProgression
        {
            get
            {
                return this._learnerDestinationandProgression;
            }
            private set
            {
                this._learnerDestinationandProgression = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die LearnerDestinationandProgression-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the LearnerDestinationandProgression collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool LearnerDestinationandProgressionSpecified
        {
            get
            {
                return (this.LearnerDestinationandProgression.Count != 0);
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.373.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("MessageHeader", Namespace="ESFA/ILR/2020-21", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class MessageHeader
    {
        
        [System.Xml.Serialization.XmlElementAttribute("CollectionDetails")]
        public MessageHeaderCollectionDetails CollectionDetails { get; set; }
        
        [System.Xml.Serialization.XmlElementAttribute("Source")]
        public MessageHeaderSource Source { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.373.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("MessageHeaderCollectionDetails", Namespace="ESFA/ILR/2020-21", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class MessageHeaderCollectionDetails
    {
        
        [System.Xml.Serialization.XmlElementAttribute("Collection")]
        public MessageHeaderCollectionDetailsCollection Collection { get; set; }
        
        [System.Xml.Serialization.XmlElementAttribute("Year")]
        public MessageHeaderCollectionDetailsYear Year { get; set; }
        
        [System.Xml.Serialization.XmlElementAttribute("FilePreparationDate", DataType="date")]
        public System.DateTime FilePreparationDate { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.373.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("MessageHeaderCollectionDetailsCollection", Namespace="ESFA/ILR/2020-21", AnonymousType=true)]
    public enum MessageHeaderCollectionDetailsCollection
    {
        
        ILR,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.373.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("MessageHeaderCollectionDetailsYear", Namespace="ESFA/ILR/2020-21", AnonymousType=true)]
    public enum MessageHeaderCollectionDetailsYear
    {
        
        [System.Xml.Serialization.XmlEnumAttribute("2021")]
        Item2021,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.373.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("MessageHeaderSource", Namespace="ESFA/ILR/2020-21", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class MessageHeaderSource
    {
        
        [System.Xml.Serialization.XmlElementAttribute("ProtectiveMarking")]
        public MessageHeaderSourceProtectiveMarking ProtectiveMarking { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Minimum inclusive value: 10000000.</para>
        /// <para xml:lang="en">Maximum inclusive value: 99999999 .</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.RangeAttribute(typeof(int), "10000000", "99999999 ")]
        [System.Xml.Serialization.XmlElementAttribute("UKPRN")]
        public int UKPRN { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Minimum length: 1.</para>
        /// <para xml:lang="en">Maximum length: 40.</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.MinLengthAttribute(1)]
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(40)]
        [System.Xml.Serialization.XmlElementAttribute("SoftwareSupplier")]
        public string SoftwareSupplier { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Minimum length: 1.</para>
        /// <para xml:lang="en">Maximum length: 30.</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.MinLengthAttribute(1)]
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(30)]
        [System.Xml.Serialization.XmlElementAttribute("SoftwarePackage")]
        public string SoftwarePackage { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Minimum length: 1.</para>
        /// <para xml:lang="en">Maximum length: 20.</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.MinLengthAttribute(1)]
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(20)]
        [System.Xml.Serialization.XmlElementAttribute("Release")]
        public string Release { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Pattern: [0-9]{1,2}.</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[0-9]{1,2}")]
        [System.Xml.Serialization.XmlElementAttribute("SerialNo")]
        public string SerialNo { get; set; }
        
        [System.Xml.Serialization.XmlElementAttribute("DateTime", DataType="dateTime")]
        public System.DateTime DateTime { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Minimum length: 1.</para>
        /// <para xml:lang="en">Maximum length: 100.</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.MinLengthAttribute(1)]
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(100)]
        [System.Xml.Serialization.XmlElementAttribute("ReferenceData")]
        public string ReferenceData { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Minimum length: 1.</para>
        /// <para xml:lang="en">Maximum length: 20.</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.MinLengthAttribute(1)]
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(20)]
        [System.Xml.Serialization.XmlElementAttribute("ComponentSetVersion")]
        public string ComponentSetVersion { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.373.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("MessageHeaderSourceProtectiveMarking", Namespace="ESFA/ILR/2020-21", AnonymousType=true)]
    public enum MessageHeaderSourceProtectiveMarking
    {
        
        [System.Xml.Serialization.XmlEnumAttribute("OFFICIAL-SENSITIVE-Personal")]
        OFFICIAL_SENSITIVE_Personal,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.373.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("MessageSourceFiles", Namespace="ESFA/ILR/2020-21", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class MessageSourceFiles
    {
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<MessageSourceFilesSourceFile> _sourceFile;
        
        [System.Xml.Serialization.XmlElementAttribute("SourceFile")]
        public System.Collections.Generic.List<MessageSourceFilesSourceFile> SourceFile
        {
            get
            {
                return this._sourceFile;
            }
            private set
            {
                this._sourceFile = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Initialisiert eine neue Instanz der <see cref="MessageSourceFiles" /> Klasse.</para>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="MessageSourceFiles" /> class.</para>
        /// </summary>
        public MessageSourceFiles()
        {
            this._sourceFile = new System.Collections.Generic.List<MessageSourceFilesSourceFile>();
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.373.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("MessageSourceFilesSourceFile", Namespace="ESFA/ILR/2020-21", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class MessageSourceFilesSourceFile
    {
        
        /// <summary>
        /// <para xml:lang="en">Minimum length: 1.</para>
        /// <para xml:lang="en">Maximum length: 50.</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.MinLengthAttribute(1)]
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(50)]
        [System.Xml.Serialization.XmlElementAttribute("SourceFileName")]
        public string SourceFileName { get; set; }
        
        [System.Xml.Serialization.XmlElementAttribute("FilePreparationDate", DataType="date")]
        public System.DateTime FilePreparationDate { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Minimum length: 1.</para>
        /// <para xml:lang="en">Maximum length: 40.</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.MinLengthAttribute(1)]
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(40)]
        [System.Xml.Serialization.XmlElementAttribute("SoftwareSupplier")]
        public string SoftwareSupplier { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Minimum length: 1.</para>
        /// <para xml:lang="en">Maximum length: 30.</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.MinLengthAttribute(1)]
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(30)]
        [System.Xml.Serialization.XmlElementAttribute("SoftwarePackage")]
        public string SoftwarePackage { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Minimum length: 1.</para>
        /// <para xml:lang="en">Maximum length: 20.</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.MinLengthAttribute(1)]
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(20)]
        [System.Xml.Serialization.XmlElementAttribute("Release")]
        public string Release { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Pattern: [0-9]{1,2}.</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[0-9]{1,2}")]
        [System.Xml.Serialization.XmlElementAttribute("SerialNo")]
        public string SerialNo { get; set; }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        [System.Xml.Serialization.XmlElementAttribute("DateTime", DataType="dateTime")]
        public System.DateTime DateTimeValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die DateTime-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the DateTime property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        public bool DateTimeValueSpecified { get; set; }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public System.Nullable<System.DateTime> DateTime
        {
            get
            {
                if (this.DateTimeValueSpecified)
                {
                    return this.DateTimeValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.DateTimeValue = value.GetValueOrDefault();
                this.DateTimeValueSpecified = value.HasValue;
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.373.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("MessageLearningProvider", Namespace="ESFA/ILR/2020-21", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class MessageLearningProvider
    {
        
        /// <summary>
        /// <para xml:lang="en">Minimum inclusive value: 10000000.</para>
        /// <para xml:lang="en">Maximum inclusive value: 99999999.</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.RangeAttribute(typeof(int), "10000000", "99999999")]
        [System.Xml.Serialization.XmlElementAttribute("UKPRN")]
        public int UKPRN { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.373.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("MessageLearner", Namespace="ESFA/ILR/2020-21", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class MessageLearner
    {
        
        /// <summary>
        /// <para xml:lang="en">Maximum length: 100.</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(100)]
        [System.Xml.Serialization.XmlElementAttribute("LearnRefNumber")]
        public string LearnRefNumber { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Maximum length: 1000.</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(1000)]
        [System.Xml.Serialization.XmlElementAttribute("PrevLearnRefNumber")]
        public string PrevLearnRefNumber { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Total number of digits: 18.</para>
        /// </summary>
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        [System.Xml.Serialization.XmlElementAttribute("PrevUKPRN")]
        public long PrevUKPRNValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die PrevUKPRN-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the PrevUKPRN property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        public bool PrevUKPRNValueSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Total number of digits: 18.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public System.Nullable<long> PrevUKPRN
        {
            get
            {
                if (this.PrevUKPRNValueSpecified)
                {
                    return this.PrevUKPRNValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.PrevUKPRNValue = value.GetValueOrDefault();
                this.PrevUKPRNValueSpecified = value.HasValue;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Total number of digits: 18.</para>
        /// </summary>
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        [System.Xml.Serialization.XmlElementAttribute("PMUKPRN")]
        public long PMUKPRNValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die PMUKPRN-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the PMUKPRN property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        public bool PMUKPRNValueSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Total number of digits: 18.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public System.Nullable<long> PMUKPRN
        {
            get
            {
                if (this.PMUKPRNValueSpecified)
                {
                    return this.PMUKPRNValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.PMUKPRNValue = value.GetValueOrDefault();
                this.PMUKPRNValueSpecified = value.HasValue;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Maximum length: 100.</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(100)]
        [System.Xml.Serialization.XmlElementAttribute("CampId")]
        public string CampId { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Total number of digits: 18.</para>
        /// </summary>
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        [System.Xml.Serialization.XmlElementAttribute("ULN")]
        public long ULNValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die ULN-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the ULN property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        public bool ULNValueSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Total number of digits: 18.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public System.Nullable<long> ULN
        {
            get
            {
                if (this.ULNValueSpecified)
                {
                    return this.ULNValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.ULNValue = value.GetValueOrDefault();
                this.ULNValueSpecified = value.HasValue;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Maximum length: 1000.</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(1000)]
        [System.Xml.Serialization.XmlElementAttribute("FamilyName")]
        public string FamilyName { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Maximum length: 1000.</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(1000)]
        [System.Xml.Serialization.XmlElementAttribute("GivenNames")]
        public string GivenNames { get; set; }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        [System.Xml.Serialization.XmlElementAttribute("DateOfBirth", DataType="date")]
        public System.DateTime DateOfBirthValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die DateOfBirth-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the DateOfBirth property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        public bool DateOfBirthValueSpecified { get; set; }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public System.Nullable<System.DateTime> DateOfBirth
        {
            get
            {
                if (this.DateOfBirthValueSpecified)
                {
                    return this.DateOfBirthValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.DateOfBirthValue = value.GetValueOrDefault();
                this.DateOfBirthValueSpecified = value.HasValue;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Total number of digits: 18.</para>
        /// </summary>
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        [System.Xml.Serialization.XmlElementAttribute("Ethnicity")]
        public long EthnicityValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Ethnicity-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Ethnicity property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        public bool EthnicityValueSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Total number of digits: 18.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public System.Nullable<long> Ethnicity
        {
            get
            {
                if (this.EthnicityValueSpecified)
                {
                    return this.EthnicityValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.EthnicityValue = value.GetValueOrDefault();
                this.EthnicityValueSpecified = value.HasValue;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Maximum length: 1000.</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(1000)]
        [System.Xml.Serialization.XmlElementAttribute("Sex")]
        public string Sex { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Total number of digits: 18.</para>
        /// </summary>
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        [System.Xml.Serialization.XmlElementAttribute("LLDDHealthProb")]
        public long LLDDHealthProbValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die LLDDHealthProb-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the LLDDHealthProb property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        public bool LLDDHealthProbValueSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Total number of digits: 18.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public System.Nullable<long> LLDDHealthProb
        {
            get
            {
                if (this.LLDDHealthProbValueSpecified)
                {
                    return this.LLDDHealthProbValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.LLDDHealthProbValue = value.GetValueOrDefault();
                this.LLDDHealthProbValueSpecified = value.HasValue;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Maximum length: 1000.</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(1000)]
        [System.Xml.Serialization.XmlElementAttribute("NINumber")]
        public string NINumber { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Total number of digits: 18.</para>
        /// </summary>
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        [System.Xml.Serialization.XmlElementAttribute("PriorAttain")]
        public long PriorAttainValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die PriorAttain-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the PriorAttain property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        public bool PriorAttainValueSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Total number of digits: 18.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public System.Nullable<long> PriorAttain
        {
            get
            {
                if (this.PriorAttainValueSpecified)
                {
                    return this.PriorAttainValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.PriorAttainValue = value.GetValueOrDefault();
                this.PriorAttainValueSpecified = value.HasValue;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Total number of digits: 18.</para>
        /// </summary>
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        [System.Xml.Serialization.XmlElementAttribute("Accom")]
        public long AccomValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Accom-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Accom property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        public bool AccomValueSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Total number of digits: 18.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public System.Nullable<long> Accom
        {
            get
            {
                if (this.AccomValueSpecified)
                {
                    return this.AccomValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.AccomValue = value.GetValueOrDefault();
                this.AccomValueSpecified = value.HasValue;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Total number of digits: 18.</para>
        /// </summary>
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        [System.Xml.Serialization.XmlElementAttribute("ALSCost")]
        public long ALSCostValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die ALSCost-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the ALSCost property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        public bool ALSCostValueSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Total number of digits: 18.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public System.Nullable<long> ALSCost
        {
            get
            {
                if (this.ALSCostValueSpecified)
                {
                    return this.ALSCostValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.ALSCostValue = value.GetValueOrDefault();
                this.ALSCostValueSpecified = value.HasValue;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Total number of digits: 18.</para>
        /// </summary>
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        [System.Xml.Serialization.XmlElementAttribute("PlanLearnHours")]
        public long PlanLearnHoursValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die PlanLearnHours-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the PlanLearnHours property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        public bool PlanLearnHoursValueSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Total number of digits: 18.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public System.Nullable<long> PlanLearnHours
        {
            get
            {
                if (this.PlanLearnHoursValueSpecified)
                {
                    return this.PlanLearnHoursValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.PlanLearnHoursValue = value.GetValueOrDefault();
                this.PlanLearnHoursValueSpecified = value.HasValue;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Total number of digits: 18.</para>
        /// </summary>
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        [System.Xml.Serialization.XmlElementAttribute("PlanEEPHours")]
        public long PlanEEPHoursValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die PlanEEPHours-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the PlanEEPHours property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        public bool PlanEEPHoursValueSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Total number of digits: 18.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public System.Nullable<long> PlanEEPHours
        {
            get
            {
                if (this.PlanEEPHoursValueSpecified)
                {
                    return this.PlanEEPHoursValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.PlanEEPHoursValue = value.GetValueOrDefault();
                this.PlanEEPHoursValueSpecified = value.HasValue;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Maximum length: 1000.</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(1000)]
        [System.Xml.Serialization.XmlElementAttribute("MathGrade")]
        public string MathGrade { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Maximum length: 1000.</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(1000)]
        [System.Xml.Serialization.XmlElementAttribute("EngGrade")]
        public string EngGrade { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Maximum length: 1000.</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(1000)]
        [System.Xml.Serialization.XmlElementAttribute("PostcodePrior")]
        public string PostcodePrior { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Maximum length: 1000.</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(1000)]
        [System.Xml.Serialization.XmlElementAttribute("Postcode")]
        public string Postcode { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Maximum length: 1000.</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(1000)]
        [System.Xml.Serialization.XmlElementAttribute("AddLine1")]
        public string AddLine1 { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Maximum length: 1000.</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(1000)]
        [System.Xml.Serialization.XmlElementAttribute("AddLine2")]
        public string AddLine2 { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Maximum length: 1000.</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(1000)]
        [System.Xml.Serialization.XmlElementAttribute("AddLine3")]
        public string AddLine3 { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Maximum length: 1000.</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(1000)]
        [System.Xml.Serialization.XmlElementAttribute("AddLine4")]
        public string AddLine4 { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Maximum length: 1000.</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(1000)]
        [System.Xml.Serialization.XmlElementAttribute("TelNo")]
        public string TelNo { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Maximum length: 1000.</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(1000)]
        [System.Xml.Serialization.XmlElementAttribute("Email")]
        public string Email { get; set; }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<MessageLearnerContactPreference> _contactPreference;
        
        [System.Xml.Serialization.XmlElementAttribute("ContactPreference")]
        public System.Collections.Generic.List<MessageLearnerContactPreference> ContactPreference
        {
            get
            {
                return this._contactPreference;
            }
            private set
            {
                this._contactPreference = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die ContactPreference-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the ContactPreference collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ContactPreferenceSpecified
        {
            get
            {
                return (this.ContactPreference.Count != 0);
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Initialisiert eine neue Instanz der <see cref="MessageLearner" /> Klasse.</para>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="MessageLearner" /> class.</para>
        /// </summary>
        public MessageLearner()
        {
            this._contactPreference = new System.Collections.Generic.List<MessageLearnerContactPreference>();
            this._lLDDandHealthProblem = new System.Collections.Generic.List<MessageLearnerLLDDandHealthProblem>();
            this._learnerFAM = new System.Collections.Generic.List<MessageLearnerLearnerFAM>();
            this._providerSpecLearnerMonitoring = new System.Collections.Generic.List<MessageLearnerProviderSpecLearnerMonitoring>();
            this._learnerEmploymentStatus = new System.Collections.Generic.List<MessageLearnerLearnerEmploymentStatus>();
            this._learnerHE = new System.Collections.Generic.List<MessageLearnerLearnerHE>();
            this._learningDelivery = new System.Collections.Generic.List<MessageLearnerLearningDelivery>();
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<MessageLearnerLLDDandHealthProblem> _lLDDandHealthProblem;
        
        [System.Xml.Serialization.XmlElementAttribute("LLDDandHealthProblem")]
        public System.Collections.Generic.List<MessageLearnerLLDDandHealthProblem> LLDDandHealthProblem
        {
            get
            {
                return this._lLDDandHealthProblem;
            }
            private set
            {
                this._lLDDandHealthProblem = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die LLDDandHealthProblem-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the LLDDandHealthProblem collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool LLDDandHealthProblemSpecified
        {
            get
            {
                return (this.LLDDandHealthProblem.Count != 0);
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<MessageLearnerLearnerFAM> _learnerFAM;
        
        [System.Xml.Serialization.XmlElementAttribute("LearnerFAM")]
        public System.Collections.Generic.List<MessageLearnerLearnerFAM> LearnerFAM
        {
            get
            {
                return this._learnerFAM;
            }
            private set
            {
                this._learnerFAM = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die LearnerFAM-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the LearnerFAM collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool LearnerFAMSpecified
        {
            get
            {
                return (this.LearnerFAM.Count != 0);
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<MessageLearnerProviderSpecLearnerMonitoring> _providerSpecLearnerMonitoring;
        
        [System.Xml.Serialization.XmlElementAttribute("ProviderSpecLearnerMonitoring")]
        public System.Collections.Generic.List<MessageLearnerProviderSpecLearnerMonitoring> ProviderSpecLearnerMonitoring
        {
            get
            {
                return this._providerSpecLearnerMonitoring;
            }
            private set
            {
                this._providerSpecLearnerMonitoring = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die ProviderSpecLearnerMonitoring-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the ProviderSpecLearnerMonitoring collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ProviderSpecLearnerMonitoringSpecified
        {
            get
            {
                return (this.ProviderSpecLearnerMonitoring.Count != 0);
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<MessageLearnerLearnerEmploymentStatus> _learnerEmploymentStatus;
        
        [System.Xml.Serialization.XmlElementAttribute("LearnerEmploymentStatus")]
        public System.Collections.Generic.List<MessageLearnerLearnerEmploymentStatus> LearnerEmploymentStatus
        {
            get
            {
                return this._learnerEmploymentStatus;
            }
            private set
            {
                this._learnerEmploymentStatus = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die LearnerEmploymentStatus-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the LearnerEmploymentStatus collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool LearnerEmploymentStatusSpecified
        {
            get
            {
                return (this.LearnerEmploymentStatus.Count != 0);
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<MessageLearnerLearnerHE> _learnerHE;
        
        [System.Xml.Serialization.XmlElementAttribute("LearnerHE")]
        public System.Collections.Generic.List<MessageLearnerLearnerHE> LearnerHE
        {
            get
            {
                return this._learnerHE;
            }
            private set
            {
                this._learnerHE = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die LearnerHE-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the LearnerHE collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool LearnerHESpecified
        {
            get
            {
                return (this.LearnerHE.Count != 0);
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<MessageLearnerLearningDelivery> _learningDelivery;
        
        [System.Xml.Serialization.XmlElementAttribute("LearningDelivery")]
        public System.Collections.Generic.List<MessageLearnerLearningDelivery> LearningDelivery
        {
            get
            {
                return this._learningDelivery;
            }
            private set
            {
                this._learningDelivery = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die LearningDelivery-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the LearningDelivery collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool LearningDeliverySpecified
        {
            get
            {
                return (this.LearningDelivery.Count != 0);
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.373.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("MessageLearnerContactPreference", Namespace="ESFA/ILR/2020-21", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class MessageLearnerContactPreference
    {
        
        /// <summary>
        /// <para xml:lang="en">Maximum length: 100.</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(100)]
        [System.Xml.Serialization.XmlElementAttribute("ContPrefType")]
        public string ContPrefType { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Total number of digits: 18.</para>
        /// </summary>
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        [System.Xml.Serialization.XmlElementAttribute("ContPrefCode")]
        public long ContPrefCodeValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die ContPrefCode-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the ContPrefCode property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        public bool ContPrefCodeValueSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Total number of digits: 18.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public System.Nullable<long> ContPrefCode
        {
            get
            {
                if (this.ContPrefCodeValueSpecified)
                {
                    return this.ContPrefCodeValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.ContPrefCodeValue = value.GetValueOrDefault();
                this.ContPrefCodeValueSpecified = value.HasValue;
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.373.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("MessageLearnerLLDDandHealthProblem", Namespace="ESFA/ILR/2020-21", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class MessageLearnerLLDDandHealthProblem
    {
        
        /// <summary>
        /// <para xml:lang="en">Total number of digits: 18.</para>
        /// </summary>
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        [System.Xml.Serialization.XmlElementAttribute("LLDDCat")]
        public long LLDDCatValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die LLDDCat-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the LLDDCat property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        public bool LLDDCatValueSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Total number of digits: 18.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public System.Nullable<long> LLDDCat
        {
            get
            {
                if (this.LLDDCatValueSpecified)
                {
                    return this.LLDDCatValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.LLDDCatValue = value.GetValueOrDefault();
                this.LLDDCatValueSpecified = value.HasValue;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Total number of digits: 18.</para>
        /// </summary>
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        [System.Xml.Serialization.XmlElementAttribute("PrimaryLLDD")]
        public long PrimaryLLDDValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die PrimaryLLDD-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the PrimaryLLDD property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        public bool PrimaryLLDDValueSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Total number of digits: 18.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public System.Nullable<long> PrimaryLLDD
        {
            get
            {
                if (this.PrimaryLLDDValueSpecified)
                {
                    return this.PrimaryLLDDValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.PrimaryLLDDValue = value.GetValueOrDefault();
                this.PrimaryLLDDValueSpecified = value.HasValue;
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.373.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("MessageLearnerLearnerFAM", Namespace="ESFA/ILR/2020-21", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class MessageLearnerLearnerFAM
    {
        
        /// <summary>
        /// <para xml:lang="en">Maximum length: 1000.</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(1000)]
        [System.Xml.Serialization.XmlElementAttribute("LearnFAMType")]
        public string LearnFAMType { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Total number of digits: 18.</para>
        /// </summary>
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        [System.Xml.Serialization.XmlElementAttribute("LearnFAMCode")]
        public long LearnFAMCodeValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die LearnFAMCode-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the LearnFAMCode property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        public bool LearnFAMCodeValueSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Total number of digits: 18.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public System.Nullable<long> LearnFAMCode
        {
            get
            {
                if (this.LearnFAMCodeValueSpecified)
                {
                    return this.LearnFAMCodeValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.LearnFAMCodeValue = value.GetValueOrDefault();
                this.LearnFAMCodeValueSpecified = value.HasValue;
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.373.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("MessageLearnerProviderSpecLearnerMonitoring", Namespace="ESFA/ILR/2020-21", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class MessageLearnerProviderSpecLearnerMonitoring
    {
        
        /// <summary>
        /// <para xml:lang="en">Maximum length: 100.</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(100)]
        [System.Xml.Serialization.XmlElementAttribute("ProvSpecLearnMonOccur")]
        public string ProvSpecLearnMonOccur { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Maximum length: 1000.</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(1000)]
        [System.Xml.Serialization.XmlElementAttribute("ProvSpecLearnMon")]
        public string ProvSpecLearnMon { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.373.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("MessageLearnerLearnerEmploymentStatus", Namespace="ESFA/ILR/2020-21", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class MessageLearnerLearnerEmploymentStatus
    {
        
        /// <summary>
        /// <para xml:lang="en">Total number of digits: 18.</para>
        /// </summary>
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        [System.Xml.Serialization.XmlElementAttribute("EmpStat")]
        public long EmpStatValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die EmpStat-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the EmpStat property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        public bool EmpStatValueSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Total number of digits: 18.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public System.Nullable<long> EmpStat
        {
            get
            {
                if (this.EmpStatValueSpecified)
                {
                    return this.EmpStatValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.EmpStatValue = value.GetValueOrDefault();
                this.EmpStatValueSpecified = value.HasValue;
            }
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        [System.Xml.Serialization.XmlElementAttribute("DateEmpStatApp", DataType="date")]
        public System.DateTime DateEmpStatAppValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die DateEmpStatApp-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the DateEmpStatApp property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        public bool DateEmpStatAppValueSpecified { get; set; }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public System.Nullable<System.DateTime> DateEmpStatApp
        {
            get
            {
                if (this.DateEmpStatAppValueSpecified)
                {
                    return this.DateEmpStatAppValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.DateEmpStatAppValue = value.GetValueOrDefault();
                this.DateEmpStatAppValueSpecified = value.HasValue;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Total number of digits: 18.</para>
        /// </summary>
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        [System.Xml.Serialization.XmlElementAttribute("EmpId")]
        public long EmpIdValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die EmpId-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the EmpId property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        public bool EmpIdValueSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Total number of digits: 18.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public System.Nullable<long> EmpId
        {
            get
            {
                if (this.EmpIdValueSpecified)
                {
                    return this.EmpIdValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.EmpIdValue = value.GetValueOrDefault();
                this.EmpIdValueSpecified = value.HasValue;
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<MessageLearnerLearnerEmploymentStatusEmploymentStatusMonitoring> _employmentStatusMonitoring;
        
        [System.Xml.Serialization.XmlElementAttribute("EmploymentStatusMonitoring")]
        public System.Collections.Generic.List<MessageLearnerLearnerEmploymentStatusEmploymentStatusMonitoring> EmploymentStatusMonitoring
        {
            get
            {
                return this._employmentStatusMonitoring;
            }
            private set
            {
                this._employmentStatusMonitoring = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die EmploymentStatusMonitoring-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the EmploymentStatusMonitoring collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool EmploymentStatusMonitoringSpecified
        {
            get
            {
                return (this.EmploymentStatusMonitoring.Count != 0);
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Initialisiert eine neue Instanz der <see cref="MessageLearnerLearnerEmploymentStatus" /> Klasse.</para>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="MessageLearnerLearnerEmploymentStatus" /> class.</para>
        /// </summary>
        public MessageLearnerLearnerEmploymentStatus()
        {
            this._employmentStatusMonitoring = new System.Collections.Generic.List<MessageLearnerLearnerEmploymentStatusEmploymentStatusMonitoring>();
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.373.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("MessageLearnerLearnerEmploymentStatusEmploymentStatusMonitoring", Namespace="ESFA/ILR/2020-21", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class MessageLearnerLearnerEmploymentStatusEmploymentStatusMonitoring
    {
        
        /// <summary>
        /// <para xml:lang="en">Maximum length: 100.</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(100)]
        [System.Xml.Serialization.XmlElementAttribute("ESMType")]
        public string ESMType { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Total number of digits: 18.</para>
        /// </summary>
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        [System.Xml.Serialization.XmlElementAttribute("ESMCode")]
        public long ESMCodeValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die ESMCode-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the ESMCode property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        public bool ESMCodeValueSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Total number of digits: 18.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public System.Nullable<long> ESMCode
        {
            get
            {
                if (this.ESMCodeValueSpecified)
                {
                    return this.ESMCodeValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.ESMCodeValue = value.GetValueOrDefault();
                this.ESMCodeValueSpecified = value.HasValue;
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.373.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("MessageLearnerLearnerHE", Namespace="ESFA/ILR/2020-21", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class MessageLearnerLearnerHE
    {
        
        /// <summary>
        /// <para xml:lang="en">Maximum length: 1000.</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(1000)]
        [System.Xml.Serialization.XmlElementAttribute("UCASPERID")]
        public string UCASPERID { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Total number of digits: 18.</para>
        /// </summary>
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        [System.Xml.Serialization.XmlElementAttribute("TTACCOM")]
        public long TTACCOMValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die TTACCOM-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the TTACCOM property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        public bool TTACCOMValueSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Total number of digits: 18.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public System.Nullable<long> TTACCOM
        {
            get
            {
                if (this.TTACCOMValueSpecified)
                {
                    return this.TTACCOMValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.TTACCOMValue = value.GetValueOrDefault();
                this.TTACCOMValueSpecified = value.HasValue;
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<MessageLearnerLearnerHELearnerHEFinancialSupport> _learnerHEFinancialSupport;
        
        [System.Xml.Serialization.XmlElementAttribute("LearnerHEFinancialSupport")]
        public System.Collections.Generic.List<MessageLearnerLearnerHELearnerHEFinancialSupport> LearnerHEFinancialSupport
        {
            get
            {
                return this._learnerHEFinancialSupport;
            }
            private set
            {
                this._learnerHEFinancialSupport = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die LearnerHEFinancialSupport-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the LearnerHEFinancialSupport collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool LearnerHEFinancialSupportSpecified
        {
            get
            {
                return (this.LearnerHEFinancialSupport.Count != 0);
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Initialisiert eine neue Instanz der <see cref="MessageLearnerLearnerHE" /> Klasse.</para>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="MessageLearnerLearnerHE" /> class.</para>
        /// </summary>
        public MessageLearnerLearnerHE()
        {
            this._learnerHEFinancialSupport = new System.Collections.Generic.List<MessageLearnerLearnerHELearnerHEFinancialSupport>();
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.373.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("MessageLearnerLearnerHELearnerHEFinancialSupport", Namespace="ESFA/ILR/2020-21", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class MessageLearnerLearnerHELearnerHEFinancialSupport
    {
        
        /// <summary>
        /// <para xml:lang="en">Total number of digits: 18.</para>
        /// </summary>
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        [System.Xml.Serialization.XmlElementAttribute("FINTYPE")]
        public long FINTYPEValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die FINTYPE-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the FINTYPE property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        public bool FINTYPEValueSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Total number of digits: 18.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public System.Nullable<long> FINTYPE
        {
            get
            {
                if (this.FINTYPEValueSpecified)
                {
                    return this.FINTYPEValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.FINTYPEValue = value.GetValueOrDefault();
                this.FINTYPEValueSpecified = value.HasValue;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Total number of digits: 18.</para>
        /// </summary>
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        [System.Xml.Serialization.XmlElementAttribute("FINAMOUNT")]
        public long FINAMOUNTValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die FINAMOUNT-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the FINAMOUNT property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        public bool FINAMOUNTValueSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Total number of digits: 18.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public System.Nullable<long> FINAMOUNT
        {
            get
            {
                if (this.FINAMOUNTValueSpecified)
                {
                    return this.FINAMOUNTValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.FINAMOUNTValue = value.GetValueOrDefault();
                this.FINAMOUNTValueSpecified = value.HasValue;
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.373.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("MessageLearnerLearningDelivery", Namespace="ESFA/ILR/2020-21", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class MessageLearnerLearningDelivery
    {
        
        /// <summary>
        /// <para xml:lang="en">Maximum length: 1000.</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(1000)]
        [System.Xml.Serialization.XmlElementAttribute("LearnAimRef")]
        public string LearnAimRef { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Total number of digits: 18.</para>
        /// </summary>
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        [System.Xml.Serialization.XmlElementAttribute("AimType")]
        public long AimTypeValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die AimType-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the AimType property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        public bool AimTypeValueSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Total number of digits: 18.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public System.Nullable<long> AimType
        {
            get
            {
                if (this.AimTypeValueSpecified)
                {
                    return this.AimTypeValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.AimTypeValue = value.GetValueOrDefault();
                this.AimTypeValueSpecified = value.HasValue;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Total number of digits: 18.</para>
        /// </summary>
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        [System.Xml.Serialization.XmlElementAttribute("AimSeqNumber")]
        public long AimSeqNumberValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die AimSeqNumber-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the AimSeqNumber property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        public bool AimSeqNumberValueSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Total number of digits: 18.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public System.Nullable<long> AimSeqNumber
        {
            get
            {
                if (this.AimSeqNumberValueSpecified)
                {
                    return this.AimSeqNumberValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.AimSeqNumberValue = value.GetValueOrDefault();
                this.AimSeqNumberValueSpecified = value.HasValue;
            }
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        [System.Xml.Serialization.XmlElementAttribute("LearnStartDate", DataType="date")]
        public System.DateTime LearnStartDateValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die LearnStartDate-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the LearnStartDate property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        public bool LearnStartDateValueSpecified { get; set; }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public System.Nullable<System.DateTime> LearnStartDate
        {
            get
            {
                if (this.LearnStartDateValueSpecified)
                {
                    return this.LearnStartDateValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.LearnStartDateValue = value.GetValueOrDefault();
                this.LearnStartDateValueSpecified = value.HasValue;
            }
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        [System.Xml.Serialization.XmlElementAttribute("OrigLearnStartDate", DataType="date")]
        public System.DateTime OrigLearnStartDateValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die OrigLearnStartDate-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the OrigLearnStartDate property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        public bool OrigLearnStartDateValueSpecified { get; set; }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public System.Nullable<System.DateTime> OrigLearnStartDate
        {
            get
            {
                if (this.OrigLearnStartDateValueSpecified)
                {
                    return this.OrigLearnStartDateValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.OrigLearnStartDateValue = value.GetValueOrDefault();
                this.OrigLearnStartDateValueSpecified = value.HasValue;
            }
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        [System.Xml.Serialization.XmlElementAttribute("LearnPlanEndDate", DataType="date")]
        public System.DateTime LearnPlanEndDateValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die LearnPlanEndDate-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the LearnPlanEndDate property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        public bool LearnPlanEndDateValueSpecified { get; set; }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public System.Nullable<System.DateTime> LearnPlanEndDate
        {
            get
            {
                if (this.LearnPlanEndDateValueSpecified)
                {
                    return this.LearnPlanEndDateValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.LearnPlanEndDateValue = value.GetValueOrDefault();
                this.LearnPlanEndDateValueSpecified = value.HasValue;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Total number of digits: 18.</para>
        /// </summary>
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        [System.Xml.Serialization.XmlElementAttribute("FundModel")]
        public long FundModelValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die FundModel-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the FundModel property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        public bool FundModelValueSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Total number of digits: 18.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public System.Nullable<long> FundModel
        {
            get
            {
                if (this.FundModelValueSpecified)
                {
                    return this.FundModelValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.FundModelValue = value.GetValueOrDefault();
                this.FundModelValueSpecified = value.HasValue;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Total number of digits: 18.</para>
        /// </summary>
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        [System.Xml.Serialization.XmlElementAttribute("PHours")]
        public long PHoursValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die PHours-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the PHours property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        public bool PHoursValueSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Total number of digits: 18.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public System.Nullable<long> PHours
        {
            get
            {
                if (this.PHoursValueSpecified)
                {
                    return this.PHoursValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.PHoursValue = value.GetValueOrDefault();
                this.PHoursValueSpecified = value.HasValue;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Minimum inclusive value: 0.</para>
        /// <para xml:lang="en">Maximum inclusive value: 9999.</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.RangeAttribute(typeof(int), "0", "9999")]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        [System.Xml.Serialization.XmlElementAttribute("OTJActhours")]
        public int OTJActhoursValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die OTJActhours-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the OTJActhours property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        public bool OTJActhoursValueSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Minimum inclusive value: 0.</para>
        /// <para xml:lang="en">Maximum inclusive value: 9999.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public System.Nullable<int> OTJActhours
        {
            get
            {
                if (this.OTJActhoursValueSpecified)
                {
                    return this.OTJActhoursValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.OTJActhoursValue = value.GetValueOrDefault();
                this.OTJActhoursValueSpecified = value.HasValue;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Total number of digits: 18.</para>
        /// </summary>
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        [System.Xml.Serialization.XmlElementAttribute("ProgType")]
        public long ProgTypeValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die ProgType-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the ProgType property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        public bool ProgTypeValueSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Total number of digits: 18.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public System.Nullable<long> ProgType
        {
            get
            {
                if (this.ProgTypeValueSpecified)
                {
                    return this.ProgTypeValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.ProgTypeValue = value.GetValueOrDefault();
                this.ProgTypeValueSpecified = value.HasValue;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Total number of digits: 18.</para>
        /// </summary>
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        [System.Xml.Serialization.XmlElementAttribute("FworkCode")]
        public long FworkCodeValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die FworkCode-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the FworkCode property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        public bool FworkCodeValueSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Total number of digits: 18.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public System.Nullable<long> FworkCode
        {
            get
            {
                if (this.FworkCodeValueSpecified)
                {
                    return this.FworkCodeValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.FworkCodeValue = value.GetValueOrDefault();
                this.FworkCodeValueSpecified = value.HasValue;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Total number of digits: 18.</para>
        /// </summary>
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        [System.Xml.Serialization.XmlElementAttribute("PwayCode")]
        public long PwayCodeValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die PwayCode-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the PwayCode property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        public bool PwayCodeValueSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Total number of digits: 18.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public System.Nullable<long> PwayCode
        {
            get
            {
                if (this.PwayCodeValueSpecified)
                {
                    return this.PwayCodeValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.PwayCodeValue = value.GetValueOrDefault();
                this.PwayCodeValueSpecified = value.HasValue;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Total number of digits: 18.</para>
        /// </summary>
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        [System.Xml.Serialization.XmlElementAttribute("StdCode")]
        public long StdCodeValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die StdCode-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the StdCode property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        public bool StdCodeValueSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Total number of digits: 18.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public System.Nullable<long> StdCode
        {
            get
            {
                if (this.StdCodeValueSpecified)
                {
                    return this.StdCodeValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.StdCodeValue = value.GetValueOrDefault();
                this.StdCodeValueSpecified = value.HasValue;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Total number of digits: 18.</para>
        /// </summary>
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        [System.Xml.Serialization.XmlElementAttribute("PartnerUKPRN")]
        public long PartnerUKPRNValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die PartnerUKPRN-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the PartnerUKPRN property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        public bool PartnerUKPRNValueSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Total number of digits: 18.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public System.Nullable<long> PartnerUKPRN
        {
            get
            {
                if (this.PartnerUKPRNValueSpecified)
                {
                    return this.PartnerUKPRNValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.PartnerUKPRNValue = value.GetValueOrDefault();
                this.PartnerUKPRNValueSpecified = value.HasValue;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Maximum length: 1000.</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(1000)]
        [System.Xml.Serialization.XmlElementAttribute("DelLocPostCode")]
        public string DelLocPostCode { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Maximum length: 1000.</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(1000)]
        [System.Xml.Serialization.XmlElementAttribute("LSDPostcode")]
        public string LSDPostcode { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Total number of digits: 18.</para>
        /// </summary>
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        [System.Xml.Serialization.XmlElementAttribute("AddHours")]
        public long AddHoursValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die AddHours-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the AddHours property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        public bool AddHoursValueSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Total number of digits: 18.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public System.Nullable<long> AddHours
        {
            get
            {
                if (this.AddHoursValueSpecified)
                {
                    return this.AddHoursValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.AddHoursValue = value.GetValueOrDefault();
                this.AddHoursValueSpecified = value.HasValue;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Total number of digits: 18.</para>
        /// </summary>
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        [System.Xml.Serialization.XmlElementAttribute("PriorLearnFundAdj")]
        public long PriorLearnFundAdjValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die PriorLearnFundAdj-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the PriorLearnFundAdj property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        public bool PriorLearnFundAdjValueSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Total number of digits: 18.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public System.Nullable<long> PriorLearnFundAdj
        {
            get
            {
                if (this.PriorLearnFundAdjValueSpecified)
                {
                    return this.PriorLearnFundAdjValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.PriorLearnFundAdjValue = value.GetValueOrDefault();
                this.PriorLearnFundAdjValueSpecified = value.HasValue;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Total number of digits: 18.</para>
        /// </summary>
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        [System.Xml.Serialization.XmlElementAttribute("OtherFundAdj")]
        public long OtherFundAdjValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die OtherFundAdj-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the OtherFundAdj property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        public bool OtherFundAdjValueSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Total number of digits: 18.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public System.Nullable<long> OtherFundAdj
        {
            get
            {
                if (this.OtherFundAdjValueSpecified)
                {
                    return this.OtherFundAdjValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.OtherFundAdjValue = value.GetValueOrDefault();
                this.OtherFundAdjValueSpecified = value.HasValue;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Maximum length: 1000.</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(1000)]
        [System.Xml.Serialization.XmlElementAttribute("ConRefNumber")]
        public string ConRefNumber { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Maximum length: 1000.</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(1000)]
        [System.Xml.Serialization.XmlElementAttribute("EPAOrgID")]
        public string EPAOrgID { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Total number of digits: 18.</para>
        /// </summary>
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        [System.Xml.Serialization.XmlElementAttribute("EmpOutcome")]
        public long EmpOutcomeValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die EmpOutcome-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the EmpOutcome property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        public bool EmpOutcomeValueSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Total number of digits: 18.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public System.Nullable<long> EmpOutcome
        {
            get
            {
                if (this.EmpOutcomeValueSpecified)
                {
                    return this.EmpOutcomeValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.EmpOutcomeValue = value.GetValueOrDefault();
                this.EmpOutcomeValueSpecified = value.HasValue;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Total number of digits: 18.</para>
        /// </summary>
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        [System.Xml.Serialization.XmlElementAttribute("CompStatus")]
        public long CompStatusValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die CompStatus-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the CompStatus property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        public bool CompStatusValueSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Total number of digits: 18.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public System.Nullable<long> CompStatus
        {
            get
            {
                if (this.CompStatusValueSpecified)
                {
                    return this.CompStatusValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.CompStatusValue = value.GetValueOrDefault();
                this.CompStatusValueSpecified = value.HasValue;
            }
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        [System.Xml.Serialization.XmlElementAttribute("LearnActEndDate", DataType="date")]
        public System.DateTime LearnActEndDateValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die LearnActEndDate-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the LearnActEndDate property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        public bool LearnActEndDateValueSpecified { get; set; }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public System.Nullable<System.DateTime> LearnActEndDate
        {
            get
            {
                if (this.LearnActEndDateValueSpecified)
                {
                    return this.LearnActEndDateValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.LearnActEndDateValue = value.GetValueOrDefault();
                this.LearnActEndDateValueSpecified = value.HasValue;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Total number of digits: 18.</para>
        /// </summary>
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        [System.Xml.Serialization.XmlElementAttribute("WithdrawReason")]
        public long WithdrawReasonValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die WithdrawReason-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the WithdrawReason property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        public bool WithdrawReasonValueSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Total number of digits: 18.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public System.Nullable<long> WithdrawReason
        {
            get
            {
                if (this.WithdrawReasonValueSpecified)
                {
                    return this.WithdrawReasonValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.WithdrawReasonValue = value.GetValueOrDefault();
                this.WithdrawReasonValueSpecified = value.HasValue;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Total number of digits: 18.</para>
        /// </summary>
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        [System.Xml.Serialization.XmlElementAttribute("Outcome")]
        public long OutcomeValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Outcome-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Outcome property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        public bool OutcomeValueSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Total number of digits: 18.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public System.Nullable<long> Outcome
        {
            get
            {
                if (this.OutcomeValueSpecified)
                {
                    return this.OutcomeValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.OutcomeValue = value.GetValueOrDefault();
                this.OutcomeValueSpecified = value.HasValue;
            }
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        [System.Xml.Serialization.XmlElementAttribute("AchDate", DataType="date")]
        public System.DateTime AchDateValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die AchDate-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the AchDate property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        public bool AchDateValueSpecified { get; set; }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public System.Nullable<System.DateTime> AchDate
        {
            get
            {
                if (this.AchDateValueSpecified)
                {
                    return this.AchDateValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.AchDateValue = value.GetValueOrDefault();
                this.AchDateValueSpecified = value.HasValue;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Maximum length: 1000.</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(1000)]
        [System.Xml.Serialization.XmlElementAttribute("OutGrade")]
        public string OutGrade { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Maximum length: 1000.</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(1000)]
        [System.Xml.Serialization.XmlElementAttribute("SWSupAimId")]
        public string SWSupAimId { get; set; }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<MessageLearnerLearningDeliveryLearningDeliveryFAM> _learningDeliveryFAM;
        
        [System.Xml.Serialization.XmlElementAttribute("LearningDeliveryFAM")]
        public System.Collections.Generic.List<MessageLearnerLearningDeliveryLearningDeliveryFAM> LearningDeliveryFAM
        {
            get
            {
                return this._learningDeliveryFAM;
            }
            private set
            {
                this._learningDeliveryFAM = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die LearningDeliveryFAM-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the LearningDeliveryFAM collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool LearningDeliveryFAMSpecified
        {
            get
            {
                return (this.LearningDeliveryFAM.Count != 0);
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Initialisiert eine neue Instanz der <see cref="MessageLearnerLearningDelivery" /> Klasse.</para>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="MessageLearnerLearningDelivery" /> class.</para>
        /// </summary>
        public MessageLearnerLearningDelivery()
        {
            this._learningDeliveryFAM = new System.Collections.Generic.List<MessageLearnerLearningDeliveryLearningDeliveryFAM>();
            this._learningDeliveryWorkPlacement = new System.Collections.Generic.List<MessageLearnerLearningDeliveryLearningDeliveryWorkPlacement>();
            this._appFinRecord = new System.Collections.Generic.List<MessageLearnerLearningDeliveryAppFinRecord>();
            this._providerSpecDeliveryMonitoring = new System.Collections.Generic.List<MessageLearnerLearningDeliveryProviderSpecDeliveryMonitoring>();
            this._learningDeliveryHE = new System.Collections.Generic.List<MessageLearnerLearningDeliveryLearningDeliveryHE>();
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<MessageLearnerLearningDeliveryLearningDeliveryWorkPlacement> _learningDeliveryWorkPlacement;
        
        [System.Xml.Serialization.XmlElementAttribute("LearningDeliveryWorkPlacement")]
        public System.Collections.Generic.List<MessageLearnerLearningDeliveryLearningDeliveryWorkPlacement> LearningDeliveryWorkPlacement
        {
            get
            {
                return this._learningDeliveryWorkPlacement;
            }
            private set
            {
                this._learningDeliveryWorkPlacement = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die LearningDeliveryWorkPlacement-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the LearningDeliveryWorkPlacement collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool LearningDeliveryWorkPlacementSpecified
        {
            get
            {
                return (this.LearningDeliveryWorkPlacement.Count != 0);
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<MessageLearnerLearningDeliveryAppFinRecord> _appFinRecord;
        
        [System.Xml.Serialization.XmlElementAttribute("AppFinRecord")]
        public System.Collections.Generic.List<MessageLearnerLearningDeliveryAppFinRecord> AppFinRecord
        {
            get
            {
                return this._appFinRecord;
            }
            private set
            {
                this._appFinRecord = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die AppFinRecord-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the AppFinRecord collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool AppFinRecordSpecified
        {
            get
            {
                return (this.AppFinRecord.Count != 0);
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<MessageLearnerLearningDeliveryProviderSpecDeliveryMonitoring> _providerSpecDeliveryMonitoring;
        
        [System.Xml.Serialization.XmlElementAttribute("ProviderSpecDeliveryMonitoring")]
        public System.Collections.Generic.List<MessageLearnerLearningDeliveryProviderSpecDeliveryMonitoring> ProviderSpecDeliveryMonitoring
        {
            get
            {
                return this._providerSpecDeliveryMonitoring;
            }
            private set
            {
                this._providerSpecDeliveryMonitoring = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die ProviderSpecDeliveryMonitoring-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the ProviderSpecDeliveryMonitoring collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ProviderSpecDeliveryMonitoringSpecified
        {
            get
            {
                return (this.ProviderSpecDeliveryMonitoring.Count != 0);
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<MessageLearnerLearningDeliveryLearningDeliveryHE> _learningDeliveryHE;
        
        [System.Xml.Serialization.XmlElementAttribute("LearningDeliveryHE")]
        public System.Collections.Generic.List<MessageLearnerLearningDeliveryLearningDeliveryHE> LearningDeliveryHE
        {
            get
            {
                return this._learningDeliveryHE;
            }
            private set
            {
                this._learningDeliveryHE = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die LearningDeliveryHE-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the LearningDeliveryHE collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool LearningDeliveryHESpecified
        {
            get
            {
                return (this.LearningDeliveryHE.Count != 0);
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.373.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("MessageLearnerLearningDeliveryLearningDeliveryFAM", Namespace="ESFA/ILR/2020-21", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class MessageLearnerLearningDeliveryLearningDeliveryFAM
    {
        
        /// <summary>
        /// <para xml:lang="en">Maximum length: 100.</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(100)]
        [System.Xml.Serialization.XmlElementAttribute("LearnDelFAMType")]
        public string LearnDelFAMType { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Maximum length: 1000.</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(1000)]
        [System.Xml.Serialization.XmlElementAttribute("LearnDelFAMCode")]
        public string LearnDelFAMCode { get; set; }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        [System.Xml.Serialization.XmlElementAttribute("LearnDelFAMDateFrom", DataType="date")]
        public System.DateTime LearnDelFAMDateFromValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die LearnDelFAMDateFrom-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the LearnDelFAMDateFrom property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        public bool LearnDelFAMDateFromValueSpecified { get; set; }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public System.Nullable<System.DateTime> LearnDelFAMDateFrom
        {
            get
            {
                if (this.LearnDelFAMDateFromValueSpecified)
                {
                    return this.LearnDelFAMDateFromValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.LearnDelFAMDateFromValue = value.GetValueOrDefault();
                this.LearnDelFAMDateFromValueSpecified = value.HasValue;
            }
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        [System.Xml.Serialization.XmlElementAttribute("LearnDelFAMDateTo", DataType="date")]
        public System.DateTime LearnDelFAMDateToValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die LearnDelFAMDateTo-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the LearnDelFAMDateTo property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        public bool LearnDelFAMDateToValueSpecified { get; set; }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public System.Nullable<System.DateTime> LearnDelFAMDateTo
        {
            get
            {
                if (this.LearnDelFAMDateToValueSpecified)
                {
                    return this.LearnDelFAMDateToValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.LearnDelFAMDateToValue = value.GetValueOrDefault();
                this.LearnDelFAMDateToValueSpecified = value.HasValue;
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.373.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("MessageLearnerLearningDeliveryLearningDeliveryWorkPlacement", Namespace="ESFA/ILR/2020-21", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class MessageLearnerLearningDeliveryLearningDeliveryWorkPlacement
    {
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        [System.Xml.Serialization.XmlElementAttribute("WorkPlaceStartDate", DataType="date")]
        public System.DateTime WorkPlaceStartDateValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die WorkPlaceStartDate-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the WorkPlaceStartDate property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        public bool WorkPlaceStartDateValueSpecified { get; set; }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public System.Nullable<System.DateTime> WorkPlaceStartDate
        {
            get
            {
                if (this.WorkPlaceStartDateValueSpecified)
                {
                    return this.WorkPlaceStartDateValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.WorkPlaceStartDateValue = value.GetValueOrDefault();
                this.WorkPlaceStartDateValueSpecified = value.HasValue;
            }
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        [System.Xml.Serialization.XmlElementAttribute("WorkPlaceEndDate", DataType="date")]
        public System.DateTime WorkPlaceEndDateValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die WorkPlaceEndDate-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the WorkPlaceEndDate property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        public bool WorkPlaceEndDateValueSpecified { get; set; }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public System.Nullable<System.DateTime> WorkPlaceEndDate
        {
            get
            {
                if (this.WorkPlaceEndDateValueSpecified)
                {
                    return this.WorkPlaceEndDateValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.WorkPlaceEndDateValue = value.GetValueOrDefault();
                this.WorkPlaceEndDateValueSpecified = value.HasValue;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Total number of digits: 18.</para>
        /// </summary>
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        [System.Xml.Serialization.XmlElementAttribute("WorkPlaceHours")]
        public long WorkPlaceHoursValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die WorkPlaceHours-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the WorkPlaceHours property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        public bool WorkPlaceHoursValueSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Total number of digits: 18.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public System.Nullable<long> WorkPlaceHours
        {
            get
            {
                if (this.WorkPlaceHoursValueSpecified)
                {
                    return this.WorkPlaceHoursValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.WorkPlaceHoursValue = value.GetValueOrDefault();
                this.WorkPlaceHoursValueSpecified = value.HasValue;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Total number of digits: 18.</para>
        /// </summary>
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        [System.Xml.Serialization.XmlElementAttribute("WorkPlaceMode")]
        public long WorkPlaceModeValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die WorkPlaceMode-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the WorkPlaceMode property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        public bool WorkPlaceModeValueSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Total number of digits: 18.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public System.Nullable<long> WorkPlaceMode
        {
            get
            {
                if (this.WorkPlaceModeValueSpecified)
                {
                    return this.WorkPlaceModeValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.WorkPlaceModeValue = value.GetValueOrDefault();
                this.WorkPlaceModeValueSpecified = value.HasValue;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Total number of digits: 18.</para>
        /// </summary>
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        [System.Xml.Serialization.XmlElementAttribute("WorkPlaceEmpId")]
        public long WorkPlaceEmpIdValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die WorkPlaceEmpId-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the WorkPlaceEmpId property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        public bool WorkPlaceEmpIdValueSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Total number of digits: 18.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public System.Nullable<long> WorkPlaceEmpId
        {
            get
            {
                if (this.WorkPlaceEmpIdValueSpecified)
                {
                    return this.WorkPlaceEmpIdValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.WorkPlaceEmpIdValue = value.GetValueOrDefault();
                this.WorkPlaceEmpIdValueSpecified = value.HasValue;
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.373.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("MessageLearnerLearningDeliveryAppFinRecord", Namespace="ESFA/ILR/2020-21", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class MessageLearnerLearningDeliveryAppFinRecord
    {
        
        /// <summary>
        /// <para xml:lang="en">Maximum length: 100.</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(100)]
        [System.Xml.Serialization.XmlElementAttribute("AFinType")]
        public string AFinType { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Total number of digits: 18.</para>
        /// </summary>
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        [System.Xml.Serialization.XmlElementAttribute("AFinCode")]
        public long AFinCodeValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die AFinCode-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the AFinCode property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        public bool AFinCodeValueSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Total number of digits: 18.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public System.Nullable<long> AFinCode
        {
            get
            {
                if (this.AFinCodeValueSpecified)
                {
                    return this.AFinCodeValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.AFinCodeValue = value.GetValueOrDefault();
                this.AFinCodeValueSpecified = value.HasValue;
            }
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        [System.Xml.Serialization.XmlElementAttribute("AFinDate", DataType="date")]
        public System.DateTime AFinDateValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die AFinDate-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the AFinDate property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        public bool AFinDateValueSpecified { get; set; }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public System.Nullable<System.DateTime> AFinDate
        {
            get
            {
                if (this.AFinDateValueSpecified)
                {
                    return this.AFinDateValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.AFinDateValue = value.GetValueOrDefault();
                this.AFinDateValueSpecified = value.HasValue;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Total number of digits: 18.</para>
        /// </summary>
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        [System.Xml.Serialization.XmlElementAttribute("AFinAmount")]
        public long AFinAmountValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die AFinAmount-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the AFinAmount property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        public bool AFinAmountValueSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Total number of digits: 18.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public System.Nullable<long> AFinAmount
        {
            get
            {
                if (this.AFinAmountValueSpecified)
                {
                    return this.AFinAmountValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.AFinAmountValue = value.GetValueOrDefault();
                this.AFinAmountValueSpecified = value.HasValue;
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.373.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("MessageLearnerLearningDeliveryProviderSpecDeliveryMonitoring", Namespace="ESFA/ILR/2020-21", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class MessageLearnerLearningDeliveryProviderSpecDeliveryMonitoring
    {
        
        /// <summary>
        /// <para xml:lang="en">Maximum length: 100.</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(100)]
        [System.Xml.Serialization.XmlElementAttribute("ProvSpecDelMonOccur")]
        public string ProvSpecDelMonOccur { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Maximum length: 1000.</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(1000)]
        [System.Xml.Serialization.XmlElementAttribute("ProvSpecDelMon")]
        public string ProvSpecDelMon { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.373.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("MessageLearnerLearningDeliveryLearningDeliveryHE", Namespace="ESFA/ILR/2020-21", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class MessageLearnerLearningDeliveryLearningDeliveryHE
    {
        
        /// <summary>
        /// <para xml:lang="en">Maximum length: 1000.</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(1000)]
        [System.Xml.Serialization.XmlElementAttribute("NUMHUS")]
        public string NUMHUS { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Maximum length: 1000.</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(1000)]
        [System.Xml.Serialization.XmlElementAttribute("SSN")]
        public string SSN { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Maximum length: 1000.</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(1000)]
        [System.Xml.Serialization.XmlElementAttribute("QUALENT3")]
        public string QUALENT3 { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Total number of digits: 18.</para>
        /// </summary>
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        [System.Xml.Serialization.XmlElementAttribute("SOC2000")]
        public long SOC2000Value { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die SOC2000-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the SOC2000 property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        public bool SOC2000ValueSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Total number of digits: 18.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public System.Nullable<long> SOC2000
        {
            get
            {
                if (this.SOC2000ValueSpecified)
                {
                    return this.SOC2000Value;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.SOC2000Value = value.GetValueOrDefault();
                this.SOC2000ValueSpecified = value.HasValue;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Total number of digits: 18.</para>
        /// </summary>
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        [System.Xml.Serialization.XmlElementAttribute("SEC")]
        public long SECValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die SEC-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the SEC property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        public bool SECValueSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Total number of digits: 18.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public System.Nullable<long> SEC
        {
            get
            {
                if (this.SECValueSpecified)
                {
                    return this.SECValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.SECValue = value.GetValueOrDefault();
                this.SECValueSpecified = value.HasValue;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Maximum length: 1000.</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(1000)]
        [System.Xml.Serialization.XmlElementAttribute("UCASAPPID")]
        public string UCASAPPID { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Total number of digits: 18.</para>
        /// </summary>
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        [System.Xml.Serialization.XmlElementAttribute("TYPEYR")]
        public long TYPEYRValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die TYPEYR-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the TYPEYR property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        public bool TYPEYRValueSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Total number of digits: 18.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public System.Nullable<long> TYPEYR
        {
            get
            {
                if (this.TYPEYRValueSpecified)
                {
                    return this.TYPEYRValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.TYPEYRValue = value.GetValueOrDefault();
                this.TYPEYRValueSpecified = value.HasValue;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Total number of digits: 18.</para>
        /// </summary>
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        [System.Xml.Serialization.XmlElementAttribute("MODESTUD")]
        public long MODESTUDValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die MODESTUD-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the MODESTUD property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        public bool MODESTUDValueSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Total number of digits: 18.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public System.Nullable<long> MODESTUD
        {
            get
            {
                if (this.MODESTUDValueSpecified)
                {
                    return this.MODESTUDValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.MODESTUDValue = value.GetValueOrDefault();
                this.MODESTUDValueSpecified = value.HasValue;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Total number of digits: 18.</para>
        /// </summary>
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        [System.Xml.Serialization.XmlElementAttribute("FUNDLEV")]
        public long FUNDLEVValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die FUNDLEV-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the FUNDLEV property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        public bool FUNDLEVValueSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Total number of digits: 18.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public System.Nullable<long> FUNDLEV
        {
            get
            {
                if (this.FUNDLEVValueSpecified)
                {
                    return this.FUNDLEVValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.FUNDLEVValue = value.GetValueOrDefault();
                this.FUNDLEVValueSpecified = value.HasValue;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Total number of digits: 18.</para>
        /// </summary>
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        [System.Xml.Serialization.XmlElementAttribute("FUNDCOMP")]
        public long FUNDCOMPValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die FUNDCOMP-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the FUNDCOMP property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        public bool FUNDCOMPValueSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Total number of digits: 18.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public System.Nullable<long> FUNDCOMP
        {
            get
            {
                if (this.FUNDCOMPValueSpecified)
                {
                    return this.FUNDCOMPValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.FUNDCOMPValue = value.GetValueOrDefault();
                this.FUNDCOMPValueSpecified = value.HasValue;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Total number of digits: 32.</para>
        /// </summary>
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        [System.Xml.Serialization.XmlElementAttribute("STULOAD")]
        public decimal STULOADValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die STULOAD-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the STULOAD property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        public bool STULOADValueSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Total number of digits: 32.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public System.Nullable<decimal> STULOAD
        {
            get
            {
                if (this.STULOADValueSpecified)
                {
                    return this.STULOADValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.STULOADValue = value.GetValueOrDefault();
                this.STULOADValueSpecified = value.HasValue;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Total number of digits: 18.</para>
        /// </summary>
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        [System.Xml.Serialization.XmlElementAttribute("YEARSTU")]
        public long YEARSTUValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die YEARSTU-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the YEARSTU property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        public bool YEARSTUValueSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Total number of digits: 18.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public System.Nullable<long> YEARSTU
        {
            get
            {
                if (this.YEARSTUValueSpecified)
                {
                    return this.YEARSTUValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.YEARSTUValue = value.GetValueOrDefault();
                this.YEARSTUValueSpecified = value.HasValue;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Total number of digits: 18.</para>
        /// </summary>
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        [System.Xml.Serialization.XmlElementAttribute("MSTUFEE")]
        public long MSTUFEEValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die MSTUFEE-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the MSTUFEE property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        public bool MSTUFEEValueSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Total number of digits: 18.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public System.Nullable<long> MSTUFEE
        {
            get
            {
                if (this.MSTUFEEValueSpecified)
                {
                    return this.MSTUFEEValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.MSTUFEEValue = value.GetValueOrDefault();
                this.MSTUFEEValueSpecified = value.HasValue;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Total number of digits: 32.</para>
        /// </summary>
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        [System.Xml.Serialization.XmlElementAttribute("PCOLAB")]
        public decimal PCOLABValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die PCOLAB-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the PCOLAB property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        public bool PCOLABValueSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Total number of digits: 32.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public System.Nullable<decimal> PCOLAB
        {
            get
            {
                if (this.PCOLABValueSpecified)
                {
                    return this.PCOLABValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.PCOLABValue = value.GetValueOrDefault();
                this.PCOLABValueSpecified = value.HasValue;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Total number of digits: 32.</para>
        /// </summary>
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        [System.Xml.Serialization.XmlElementAttribute("PCFLDCS")]
        public decimal PCFLDCSValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die PCFLDCS-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the PCFLDCS property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        public bool PCFLDCSValueSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Total number of digits: 32.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public System.Nullable<decimal> PCFLDCS
        {
            get
            {
                if (this.PCFLDCSValueSpecified)
                {
                    return this.PCFLDCSValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.PCFLDCSValue = value.GetValueOrDefault();
                this.PCFLDCSValueSpecified = value.HasValue;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Total number of digits: 32.</para>
        /// </summary>
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        [System.Xml.Serialization.XmlElementAttribute("PCSLDCS")]
        public decimal PCSLDCSValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die PCSLDCS-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the PCSLDCS property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        public bool PCSLDCSValueSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Total number of digits: 32.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public System.Nullable<decimal> PCSLDCS
        {
            get
            {
                if (this.PCSLDCSValueSpecified)
                {
                    return this.PCSLDCSValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.PCSLDCSValue = value.GetValueOrDefault();
                this.PCSLDCSValueSpecified = value.HasValue;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Total number of digits: 32.</para>
        /// </summary>
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        [System.Xml.Serialization.XmlElementAttribute("PCTLDCS")]
        public decimal PCTLDCSValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die PCTLDCS-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the PCTLDCS property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        public bool PCTLDCSValueSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Total number of digits: 32.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public System.Nullable<decimal> PCTLDCS
        {
            get
            {
                if (this.PCTLDCSValueSpecified)
                {
                    return this.PCTLDCSValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.PCTLDCSValue = value.GetValueOrDefault();
                this.PCTLDCSValueSpecified = value.HasValue;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Total number of digits: 18.</para>
        /// </summary>
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        [System.Xml.Serialization.XmlElementAttribute("SPECFEE")]
        public long SPECFEEValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die SPECFEE-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the SPECFEE property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        public bool SPECFEEValueSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Total number of digits: 18.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public System.Nullable<long> SPECFEE
        {
            get
            {
                if (this.SPECFEEValueSpecified)
                {
                    return this.SPECFEEValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.SPECFEEValue = value.GetValueOrDefault();
                this.SPECFEEValueSpecified = value.HasValue;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Total number of digits: 18.</para>
        /// </summary>
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        [System.Xml.Serialization.XmlElementAttribute("NETFEE")]
        public long NETFEEValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die NETFEE-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the NETFEE property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        public bool NETFEEValueSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Total number of digits: 18.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public System.Nullable<long> NETFEE
        {
            get
            {
                if (this.NETFEEValueSpecified)
                {
                    return this.NETFEEValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.NETFEEValue = value.GetValueOrDefault();
                this.NETFEEValueSpecified = value.HasValue;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Total number of digits: 18.</para>
        /// </summary>
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        [System.Xml.Serialization.XmlElementAttribute("GROSSFEE")]
        public long GROSSFEEValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die GROSSFEE-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the GROSSFEE property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        public bool GROSSFEEValueSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Total number of digits: 18.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public System.Nullable<long> GROSSFEE
        {
            get
            {
                if (this.GROSSFEEValueSpecified)
                {
                    return this.GROSSFEEValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.GROSSFEEValue = value.GetValueOrDefault();
                this.GROSSFEEValueSpecified = value.HasValue;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Maximum length: 1000.</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(1000)]
        [System.Xml.Serialization.XmlElementAttribute("DOMICILE")]
        public string DOMICILE { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Total number of digits: 18.</para>
        /// </summary>
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        [System.Xml.Serialization.XmlElementAttribute("ELQ")]
        public long ELQValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die ELQ-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the ELQ property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        public bool ELQValueSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Total number of digits: 18.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public System.Nullable<long> ELQ
        {
            get
            {
                if (this.ELQValueSpecified)
                {
                    return this.ELQValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.ELQValue = value.GetValueOrDefault();
                this.ELQValueSpecified = value.HasValue;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Maximum length: 1000.</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(1000)]
        [System.Xml.Serialization.XmlElementAttribute("HEPostCode")]
        public string HEPostCode { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.373.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("MessageLearnerDestinationandProgression", Namespace="ESFA/ILR/2020-21", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class MessageLearnerDestinationandProgression
    {
        
        /// <summary>
        /// <para xml:lang="en">Maximum length: 100.</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(100)]
        [System.Xml.Serialization.XmlElementAttribute("LearnRefNumber")]
        public string LearnRefNumber { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Total number of digits: 18.</para>
        /// </summary>
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        [System.Xml.Serialization.XmlElementAttribute("ULN")]
        public long ULNValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die ULN-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the ULN property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        public bool ULNValueSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Total number of digits: 18.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public System.Nullable<long> ULN
        {
            get
            {
                if (this.ULNValueSpecified)
                {
                    return this.ULNValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.ULNValue = value.GetValueOrDefault();
                this.ULNValueSpecified = value.HasValue;
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.Generic.List<MessageLearnerDestinationandProgressionDPOutcome> _dPOutcome;
        
        [System.Xml.Serialization.XmlElementAttribute("DPOutcome")]
        public System.Collections.Generic.List<MessageLearnerDestinationandProgressionDPOutcome> DPOutcome
        {
            get
            {
                return this._dPOutcome;
            }
            private set
            {
                this._dPOutcome = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die DPOutcome-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the DPOutcome collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool DPOutcomeSpecified
        {
            get
            {
                return (this.DPOutcome.Count != 0);
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Initialisiert eine neue Instanz der <see cref="MessageLearnerDestinationandProgression" /> Klasse.</para>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="MessageLearnerDestinationandProgression" /> class.</para>
        /// </summary>
        public MessageLearnerDestinationandProgression()
        {
            this._dPOutcome = new System.Collections.Generic.List<MessageLearnerDestinationandProgressionDPOutcome>();
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.373.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("MessageLearnerDestinationandProgressionDPOutcome", Namespace="ESFA/ILR/2020-21", AnonymousType=true)]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class MessageLearnerDestinationandProgressionDPOutcome
    {
        
        /// <summary>
        /// <para xml:lang="en">Maximum length: 100.</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(100)]
        [System.Xml.Serialization.XmlElementAttribute("OutType")]
        public string OutType { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Total number of digits: 18.</para>
        /// </summary>
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        [System.Xml.Serialization.XmlElementAttribute("OutCode")]
        public long OutCodeValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die OutCode-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the OutCode property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        public bool OutCodeValueSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Total number of digits: 18.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public System.Nullable<long> OutCode
        {
            get
            {
                if (this.OutCodeValueSpecified)
                {
                    return this.OutCodeValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.OutCodeValue = value.GetValueOrDefault();
                this.OutCodeValueSpecified = value.HasValue;
            }
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        [System.Xml.Serialization.XmlElementAttribute("OutStartDate", DataType="date")]
        public System.DateTime OutStartDateValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die OutStartDate-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the OutStartDate property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        public bool OutStartDateValueSpecified { get; set; }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public System.Nullable<System.DateTime> OutStartDate
        {
            get
            {
                if (this.OutStartDateValueSpecified)
                {
                    return this.OutStartDateValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.OutStartDateValue = value.GetValueOrDefault();
                this.OutStartDateValueSpecified = value.HasValue;
            }
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        [System.Xml.Serialization.XmlElementAttribute("OutEndDate", DataType="date")]
        public System.DateTime OutEndDateValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die OutEndDate-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the OutEndDate property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        public bool OutEndDateValueSpecified { get; set; }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public System.Nullable<System.DateTime> OutEndDate
        {
            get
            {
                if (this.OutEndDateValueSpecified)
                {
                    return this.OutEndDateValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.OutEndDateValue = value.GetValueOrDefault();
                this.OutEndDateValueSpecified = value.HasValue;
            }
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        [System.Xml.Serialization.XmlElementAttribute("OutCollDate", DataType="date")]
        public System.DateTime OutCollDateValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die OutCollDate-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the OutCollDate property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        public bool OutCollDateValueSpecified { get; set; }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public System.Nullable<System.DateTime> OutCollDate
        {
            get
            {
                if (this.OutCollDateValueSpecified)
                {
                    return this.OutCollDateValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.OutCollDateValue = value.GetValueOrDefault();
                this.OutCollDateValueSpecified = value.HasValue;
            }
        }
    }
}
